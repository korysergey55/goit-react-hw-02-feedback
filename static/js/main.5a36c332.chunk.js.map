{"version":3,"sources":["components/feedback/section/SectionStyled.js","components/feedback/section/Section.js","components/feedback/feetbackOptoons/FeedbackOptionsStyled.js","components/feedback/feetbackOptoons/FeedbackOptions.js","components/feedback/notification/NotificationStyled.js","components/feedback/notification/Notification.js","components/feedback/statistics/StatisticsStyled.js","components/feedback/statistics/Statistics.js","components/feedback/Feedback.js","App.js","index.js"],"names":["SectionContainer","styled","section","Section","children","title","className","FeedbackContainer","div","FeedbackOptions","onLeaveFeedback","type","onClick","NotificationContainer","Notification","message","StatiscticsContainer","Statistics","state","countTotalFeedback","countPositiveFeedbackPercentage","good","neutral","bad","Feedback","scoreName","setState","prevState","oldValue","total","Math","round","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAEaA,EAAmBC,IAAOC,QAAV,gI,OCUdC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC5B,OACC,eAACL,EAAD,WACC,oBAAIM,UAAU,QAAd,SAAuBD,IACtBD,MCNSG,EAAoBN,IAAOO,IAAV,kTCmCfC,EAlCS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC1B,OACC,eAACH,EAAD,WACC,wBACCI,KAAK,SACLL,UAAU,WACVM,QAAS,WACRF,EAAgB,SAJlB,kBASA,wBACCC,KAAK,SACLL,UAAU,cACVM,QAAS,WACRF,EAAgB,YAJlB,qBASA,wBACCC,KAAK,SACLL,UAAU,UACVM,QAAS,WACRF,EAAgB,QAJlB,qBCrBUG,EAAwBZ,IAAOO,IAAV,8ECKnBM,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAO,cAACF,EAAD,UAAwBE,KCHnBC,EAAuBf,IAAOO,IAAV,kOC2BlBS,EAxBI,SAAC,GAIb,IAHNC,EAGK,EAHLA,MACAC,EAEK,EAFLA,mBACAC,EACK,EADLA,gCAEA,OACC,cAACJ,EAAD,UACEG,IAAuB,EACvB,qCACC,oBAAGb,UAAU,gBAAb,mBAAoCY,EAAMG,QAC1C,oBAAGf,UAAU,gBAAb,sBAAuCY,EAAMI,WAC7C,oBAAGhB,UAAU,gBAAb,kBAAmCY,EAAMK,OACzC,oBAAGjB,UAAU,kBAAb,oBAAuCa,OACvC,oBAAGb,UAAU,oBAAb,+BACoBc,IADpB,WAKD,cAAC,EAAD,CAAcL,QAAQ,yBC6BXS,E,4MA7CdN,MAAQ,CACPG,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNb,gBAAkB,SAACe,GAClB,EAAKC,UAAS,SAACC,GACd,IAAMC,EAAWD,EAAUF,GAC3B,OAAO,eAAGA,EAAYG,EAAW,O,EAInCT,mBAAqB,WACpB,MAA+B,EAAKD,MAEpC,OAFA,EAAQG,KAAR,EAAcC,QAAd,EAAuBC,K,EAKxBH,gCAAkC,WACjC,IAAQC,EAAS,EAAKH,MAAdG,KACFQ,EAAQ,EAAKV,qBAEnB,OADyBW,KAAKC,MAAOV,EAAOQ,EAAS,M,4CAItD,WACC,OACC,qCACC,cAAC,EAAD,CAASxB,MAAO,wBAAhB,SACC,cAAC,EAAD,CAAiBK,gBAAiBsB,KAAKtB,oBAGxC,cAAC,EAAD,CAASL,MAAO,aAAhB,SACC,cAAC,EAAD,CACCa,MAAOc,KAAKd,MACZR,gBAAiBsB,KAAKtB,gBACtBS,mBAAoBa,KAAKb,mBACzBC,gCAAiCY,KAAKZ,2C,GAvCrBa,aCKRC,EARH,WACX,OACC,mCACC,cAAC,EAAD,O,YCEHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5a36c332.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n font-size: 20px;\r\n margin-left: 30px;\r\n margin-bottom: 20px;\r\n\r\n .title {\r\n  font-size: 35px;\r\n }\r\n`;\r\n","import React from \"react\";\r\nimport {SectionContainer} from \"./SectionStyled\"\r\n\r\nconst Section = ({ children, title }) => {\r\n return (\r\n  <SectionContainer>\r\n   <h2 className=\"title\">{title}</h2>\r\n   {children}\r\n  </SectionContainer>\r\n );\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\nexport const FeedbackContainer = styled.div`\r\n .btn {\r\n  margin-right: 20px;\r\n  padding: 10px;\r\n  border-radius: 14px;\r\n\r\n  :hover {\r\n   background-color: black;\r\n   color: white;\r\n  }\r\n }\r\n .good {\r\n  background-color: #21cc21;\r\n }\r\n .neutral {\r\n  background-color: #fcff2f;\r\n }\r\n .bad {\r\n  background-color: #fc4141;\r\n }\r\n`;\r\n","import React from \"react\";\r\nimport { FeedbackContainer } from \"./FeedbackOptionsStyled\";\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n return (\r\n  <FeedbackContainer>\r\n   <button\r\n    type=\"button\"\r\n    className=\"btn good\"\r\n    onClick={() => {\r\n     onLeaveFeedback(\"good\");\r\n    }}\r\n   >\r\n    Good\r\n   </button>\r\n   <button\r\n    type=\"button\"\r\n    className=\"btn neutral\"\r\n    onClick={() => {\r\n     onLeaveFeedback(\"neutral\");\r\n    }}\r\n   >\r\n    Neutral\r\n   </button>\r\n   <button\r\n    type=\"button\"\r\n    className=\"btn bad\"\r\n    onClick={() => {\r\n     onLeaveFeedback(\"bad\");\r\n    }}\r\n   >\r\n    Bad\r\n   </button>\r\n  </FeedbackContainer>\r\n );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NotificationContainer = styled.div`\r\ncolor: red;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\n`;","import React from \"react\";\r\nimport {NotificationContainer} from \"./NotificationStyled\";\r\n\r\nconst Notification = ({ message }) => {\r\n return <NotificationContainer>{message}</NotificationContainer>;\r\n};\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\nexport const StatiscticsContainer = styled.div`\r\n .feedbackState {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n }\r\n .totalStatistics {\r\n  font-size: 22px;\r\n  font-weight: 650;\r\n }\r\n .pozitivPersentege {\r\n  font-size: 22px;\r\n  font-weight: 650;\r\n }\r\n`;","import React from \"react\";\r\nimport Notification from \"../notification/Notification\";\r\nimport {StatiscticsContainer} from \"./StatisticsStyled\";\r\n\r\nconst Statistics = ({\r\n state,\r\n countTotalFeedback,\r\n countPositiveFeedbackPercentage,\r\n}) => {\r\n return (\r\n  <StatiscticsContainer>\r\n   {countTotalFeedback() > 0 ? (\r\n    <>\r\n     <p className=\"feedbackState\">Good: {state.good}</p>\r\n     <p className=\"feedbackState\">Neutral: {state.neutral}</p>\r\n     <p className=\"feedbackState\">Bad: {state.bad}</p>\r\n     <p className=\"totalStatistics\">Total :{countTotalFeedback()}</p>\r\n     <p className=\"pozitivPersentege\">\r\n      PositiveFeedback: {countPositiveFeedbackPercentage()} %\r\n     </p>\r\n    </>\r\n   ) : (\r\n    <Notification message=\"No feedback given\" />\r\n   )}\r\n  </StatiscticsContainer>\r\n );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./section/Section\";\r\nimport FeedbackOptions from \"./feetbackOptoons/FeedbackOptions\";\r\nimport Statistics from \"./statistics/Statistics\";\r\n\r\nclass Feedback extends Component {\r\n state = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n };\r\n\r\n onLeaveFeedback = (scoreName) => {\r\n  this.setState((prevState) => {\r\n   const oldValue = prevState[scoreName];\r\n   return { [scoreName]: oldValue + 1 };\r\n  });\r\n };\r\n\r\n countTotalFeedback = () => {\r\n  const { good, neutral, bad } = this.state;\r\n  const total = good + neutral + bad;\r\n  return total;\r\n };\r\n\r\n countPositiveFeedbackPercentage = () => {\r\n  const { good } = this.state;\r\n  const total = this.countTotalFeedback();\r\n  const positiveFeedback = Math.round((good / total) * 100);\r\n  return positiveFeedback;\r\n };\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    <Section title={\"Please leave feedback\"}>\r\n     <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\r\n    </Section>\r\n\r\n    <Section title={\"Statistics\"}>\r\n     <Statistics\r\n      state={this.state}\r\n      onLeaveFeedback={this.onLeaveFeedback}\r\n      countTotalFeedback={this.countTotalFeedback}\r\n      countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\r\n     />\r\n    </Section>\r\n   </>\r\n  );\r\n }\r\n}\r\nexport default Feedback;\r\n","import React from \"react\";\r\nimport Feedback from \"./components/feedback/Feedback\";\r\nconst App = () => {\r\n return (\r\n  <>\r\n   <Feedback />\r\n  </>\r\n );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport  \"modern-normalize/modern-normalize.css\";\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}